<h1>Course Request Form</h1>
  <% form_tag({:controller => "course_form" ,:action => "create"}, :class => "bootstrap-form form-horizontal") do -%>
  <div class="control-group">
    <%= label_tag "Courses For", "Courses For", :class => "control-label" %>
    <div class="controls">
      <%= text_field_tag "username", nil, :class => "input-large", :value => @sfuid, :required => true %>
      <button type="button" id="update_course_list" class="btn">Update</button>
    </div>
  </div>

    <div class="control-group" id="enroll_me_div">
      <%= label_tag "Enroll Me", "Enroll Me", :class => "control-label" %>
      <div class="controls">
        <%=  check_box_tag "enroll_me", @sfuid, false, :disabled => true  %>
        <div>You will be enrolled as a Teacher to the selected courses</div>
      </div>
    </div>

   <div class="control-group">
     <%= label_tag "Courses you are teaching", "Course List", :class => "control-label" %>
      <div class="controls" id="course_list"></div>
   </div>

    <div class="control-group">
      <%= label_tag "Cross-list", "Cross-List Courses", :class => "control-label" %>
      <div class="controls">
        <%=  check_box_tag "cross_list", true, false, :disabled => true, :onchange => "cross_list_course_title()"  %>
        <div>This will place all the selected courses into a single course container</div>
        <div id="cross-list-course"></div>
      </div>
    </div>
<hr>
  <div class="button-container" id="button-container">
    <%= submit_tag "Create Courses", :id => "create_course_btn" ,:class=> "btn btn-primary", :disabled => true %>
  </div>
<% end %>

<%= javascript_include_tag "//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" %>
<%= javascript_include_tag "http://fgnass.github.com/spin.js/dist/spin.min.js" %>

<script>
var opts = {
  lines: 13, // The number of lines to draw
  length: 6, // The length of each line
  width: 2, // The line thickness
  radius: 8, // The radius of the inner circle
  corners: 1, // Corner roundness (0..1)
  rotate: 0, // The rotation offset
  color: '#000', // #rgb or #rrggbb
  speed: 1, // Rounds per second
  trail: 60, // Afterglow percentage
  shadow: false, // Whether to render a shadow
  hwaccel: false, // Whether to use hardware acceleration
  className: 'spinner', // The CSS class to assign to the spinner
  zIndex: 2e9, // The z-index (defaults to 2000000000)
  top: 'auto', // Top position relative to parent in px
  left: 'auto' // Left position relative to parent in px
};

    $(document).ready(function () {
       $("#enroll_me_div").hide();
       $("#course_list").html("<h5>Retrieving course list...</h5>");
       var target = document.getElementById("button-container");
       var spinner = new Spinner(opts).spin(target);
       course_list();
    });


    $("#create_course_btn").click(function() {
        $("#create_course_btn").toggleClass("btn btn-info");
        $("#create_course_btn").attr("value","Submitting...");
        var target = document.getElementById("course_list");
        var spinner = new Spinner(opts).spin(target);        
    });

    $("#update_course_list").click(function() {
        var sfuid = $("#username").val();
	      $("#enroll_me_div").hide();
        $("#course_list").html("<h5>Retrieving course list...</h5>");
        var target = document.getElementById("course_list");
        var spinner = new Spinner(opts).spin(target);

        $.getJSON("/sfu/user/" + sfuid, function(data) {
            if (data.login_id != null){
                course_list(sfuid);
            } else {
                $("#course_list").html("<h5>Invalid SFU Computing ID</h5>");
            }
        });
    });


    function course_list() {
        toggle_enroll_me();
        var sfuid = $("#username").val();

        $.getJSON("/sfu/terms/" + sfuid, function(data) {
            $("#course_list").html("");

            $.each(data, function (index, term) {
                $("#course_list").append('<div id="' + term.peopleSoftCode + '"><h4>' + term.formatted1 + '</h4><div id="' + term.peopleSoftCode + '_courses"></div></div>');
                $("#"+term.peopleSoftCode+"_courses").html("&nbsp;&nbsp;Retrieving courses...");
                courses_for_terms(sfuid, term.peopleSoftCode);
            });
           $("#course_list").append("<div id='sandbox'><h4>Other</h4></div>");
           $("#sandbox").append(sandbox_course(sfuid));
        });
    }

    function courses_for_terms(sfuid, term) {
        var target = document.getElementById(term+"_courses");
  	var spinner = new Spinner(opts).spin(target);
        $.getJSON("/sfu/courses/" + sfuid + "/" + term, function(data) {
            var num = 1;
            $("#"+term+"_courses").html("");
            $.each(data, function (index, course) {
                var section_tutorials = course.sectionTutorials;
                var course_display = course.name + course.number + " - " + course.section + " " + course.title;
                if (section_tutorials) {
                    course_display += "<br>&nbsp;&nbsp;(Includes section tutorials: " + section_tutorials  + ")";
                }
                var course_value = course.key;
                var checkbox_html = '<p>&nbsp;&nbsp;<input type="checkbox" name="selected_course_'+ num +'" id="selected_course_'+ num +'" value="' + course_value + '" onchange="enable_submit_crosslist(); cross_list_course_title();"> ' + course_display + '</p>';
                $("#"+term+"_courses").append(checkbox_html);
                num++;
            });
        });
    }

    function enable_submit_crosslist() {
        var num_selected_courses = "";
        $('input[@type=checkbox]:checked').each(function() {
            if ($(this).attr('id').match(/^selected_course_/)) {
                num_selected_courses++;
            }
        }).get();

        if ( (num_selected_courses > 2) || (num_selected_courses > 1 && !$("#selected_course_sandbox").is(':checked')) ) {
            $("#create_course_btn").removeAttr("disabled");
            $("#enroll_me").removeAttr("disabled");
            $("#cross_list").removeAttr("disabled");
        } else if (num_selected_courses > 0) {
            $("#create_course_btn").removeAttr("disabled");
            $("#enroll_me").removeAttr("disabled");
            $("#cross_list").removeAttr("checked");
            $("#cross_list").attr("disabled", "disabled");
            $("#cross-list-course").html("");
        } else {
            $("#create_course_btn").attr("disabled", "disabled");
            $("#cross_list").attr("disabled", "disabled");
            $("#cross-list-course").html("");
        }

    }

    function cross_list_course_title() {
        // Disable Sandbox checkbox since it should not be cross-listed
        if ($("#cross_list").is(':checked')) {
            $("#cross-list-course").html("");
            $("#selected_course_sandbox").removeAttr("checked");
            $("#selected_course_sandbox").attr("disabled", "disabled");
            //var checked = $("input[@type=checkbox]:checked");
            var cross_list_title = "";
            $('input[@type=checkbox]:checked').each(function() {
                if ($(this).attr('id').match(/^selected_course_/) && $(this).attr('id') != "selected_course_sandbox" ) {
                    var course_info = $(this).val().split(":::");
                    cross_list_title += course_info[1].toUpperCase() + course_info[2] + " - " + course_info[3].toUpperCase() + " / ";
                }
            }).get();
            $("#cross-list-course").html("&nbsp;&nbsp;&quot;" + cross_list_title.slice(0,-3) + "&quot;");
            $("#create_course_btn").attr("value","Create Cross-List Course");
        } else {
            $("#selected_course_sandbox").removeAttr("disabled");
            $("#cross-list-course").html("");
            $("#create_course_btn").attr("value","Create Courses");
        }


    }

    function toggle_enroll_me(){
        if ($("#username").val() != $("#enroll_me").val()) {
            $("#enroll_me_div").show();
        } else {
            $("#enroll_me_div").hide();
        }
    }
    function sandbox_course(sfuid) {
        var title = "Sandbox - " + sfuid;
        return '<p>&nbsp;&nbsp;<input type="checkbox" name="selected_course_sandbox" id="selected_course_sandbox" value="sandbox" onchange="enable_submit_crosslist();"> ' + title + '</p>';
    }


    function format_term(term_code) {
        var term_hash = [];
        term_hash[1] = "Spring";
        term_hash[4] = "Summer";
        term_hash[7] = "Fall";

        var year = Number(term_code.toString().substring(0,3)) + 1900;
        var term_index = term_code.toString().substring(3);
        return year + " " + term_hash[term_index];
    }


</script>
